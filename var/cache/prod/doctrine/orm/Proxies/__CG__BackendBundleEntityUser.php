<?php

namespace Proxies\__CG__\BackendBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class User extends \BackendBundle\Entity\User implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'BackendBundle\\Entity\\User' . "\0" . 'id', '' . "\0" . 'BackendBundle\\Entity\\User' . "\0" . 'name', '' . "\0" . 'BackendBundle\\Entity\\User' . "\0" . 'plastname', '' . "\0" . 'BackendBundle\\Entity\\User' . "\0" . 'mlastname', '' . "\0" . 'BackendBundle\\Entity\\User' . "\0" . 'age', '' . "\0" . 'BackendBundle\\Entity\\User' . "\0" . 'email', '' . "\0" . 'BackendBundle\\Entity\\User' . "\0" . 'telephone', '' . "\0" . 'BackendBundle\\Entity\\User' . "\0" . 'password', '' . "\0" . 'BackendBundle\\Entity\\User' . "\0" . 'connection', '' . "\0" . 'BackendBundle\\Entity\\User' . "\0" . 'biography', '' . "\0" . 'BackendBundle\\Entity\\User' . "\0" . 'image', '' . "\0" . 'BackendBundle\\Entity\\User' . "\0" . 'termscondition', '' . "\0" . 'BackendBundle\\Entity\\User' . "\0" . 'datejob', '' . "\0" . 'BackendBundle\\Entity\\User' . "\0" . 'privacy', '' . "\0" . 'BackendBundle\\Entity\\User' . "\0" . 'role', '' . "\0" . 'BackendBundle\\Entity\\User' . "\0" . 'active', '' . "\0" . 'BackendBundle\\Entity\\User' . "\0" . 'createdAt', '' . "\0" . 'BackendBundle\\Entity\\User' . "\0" . 'updatedAt', '' . "\0" . 'BackendBundle\\Entity\\User' . "\0" . 'anonimo', '' . "\0" . 'BackendBundle\\Entity\\User' . "\0" . 'facebookId', '' . "\0" . 'BackendBundle\\Entity\\User' . "\0" . 'googleId', '' . "\0" . 'BackendBundle\\Entity\\User' . "\0" . 'gender'];
        }

        return ['__isInitialized__', '' . "\0" . 'BackendBundle\\Entity\\User' . "\0" . 'id', '' . "\0" . 'BackendBundle\\Entity\\User' . "\0" . 'name', '' . "\0" . 'BackendBundle\\Entity\\User' . "\0" . 'plastname', '' . "\0" . 'BackendBundle\\Entity\\User' . "\0" . 'mlastname', '' . "\0" . 'BackendBundle\\Entity\\User' . "\0" . 'age', '' . "\0" . 'BackendBundle\\Entity\\User' . "\0" . 'email', '' . "\0" . 'BackendBundle\\Entity\\User' . "\0" . 'telephone', '' . "\0" . 'BackendBundle\\Entity\\User' . "\0" . 'password', '' . "\0" . 'BackendBundle\\Entity\\User' . "\0" . 'connection', '' . "\0" . 'BackendBundle\\Entity\\User' . "\0" . 'biography', '' . "\0" . 'BackendBundle\\Entity\\User' . "\0" . 'image', '' . "\0" . 'BackendBundle\\Entity\\User' . "\0" . 'termscondition', '' . "\0" . 'BackendBundle\\Entity\\User' . "\0" . 'datejob', '' . "\0" . 'BackendBundle\\Entity\\User' . "\0" . 'privacy', '' . "\0" . 'BackendBundle\\Entity\\User' . "\0" . 'role', '' . "\0" . 'BackendBundle\\Entity\\User' . "\0" . 'active', '' . "\0" . 'BackendBundle\\Entity\\User' . "\0" . 'createdAt', '' . "\0" . 'BackendBundle\\Entity\\User' . "\0" . 'updatedAt', '' . "\0" . 'BackendBundle\\Entity\\User' . "\0" . 'anonimo', '' . "\0" . 'BackendBundle\\Entity\\User' . "\0" . 'facebookId', '' . "\0" . 'BackendBundle\\Entity\\User' . "\0" . 'googleId', '' . "\0" . 'BackendBundle\\Entity\\User' . "\0" . 'gender'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (User $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getUsername()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUsername', []);

        return parent::getUsername();
    }

    /**
     * {@inheritDoc}
     */
    public function getSalt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSalt', []);

        return parent::getSalt();
    }

    /**
     * {@inheritDoc}
     */
    public function getRoles()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRoles', []);

        return parent::getRoles();
    }

    /**
     * {@inheritDoc}
     */
    public function eraseCredentials()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'eraseCredentials', []);

        return parent::eraseCredentials();
    }

    /**
     * {@inheritDoc}
     */
    public function __toString()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', []);

        return parent::__toString();
    }

    /**
     * {@inheritDoc}
     */
    public function serialize()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'serialize', []);

        return parent::serialize();
    }

    /**
     * {@inheritDoc}
     */
    public function unserialize($serialized)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'unserialize', [$serialized]);

        return parent::unserialize($serialized);
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setName($name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setName', [$name]);

        return parent::setName($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', []);

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function setPlastname($plastname)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPlastname', [$plastname]);

        return parent::setPlastname($plastname);
    }

    /**
     * {@inheritDoc}
     */
    public function getPlastname()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPlastname', []);

        return parent::getPlastname();
    }

    /**
     * {@inheritDoc}
     */
    public function setMlastname($mlastname)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMlastname', [$mlastname]);

        return parent::setMlastname($mlastname);
    }

    /**
     * {@inheritDoc}
     */
    public function getMlastname()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMlastname', []);

        return parent::getMlastname();
    }

    /**
     * {@inheritDoc}
     */
    public function setAge($age)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAge', [$age]);

        return parent::setAge($age);
    }

    /**
     * {@inheritDoc}
     */
    public function getAge()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAge', []);

        return parent::getAge();
    }

    /**
     * {@inheritDoc}
     */
    public function setEmail($email)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEmail', [$email]);

        return parent::setEmail($email);
    }

    /**
     * {@inheritDoc}
     */
    public function getEmail()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEmail', []);

        return parent::getEmail();
    }

    /**
     * {@inheritDoc}
     */
    public function setTelephone($telephone)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTelephone', [$telephone]);

        return parent::setTelephone($telephone);
    }

    /**
     * {@inheritDoc}
     */
    public function getTelephone()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTelephone', []);

        return parent::getTelephone();
    }

    /**
     * {@inheritDoc}
     */
    public function setPassword($password)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPassword', [$password]);

        return parent::setPassword($password);
    }

    /**
     * {@inheritDoc}
     */
    public function getPassword()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPassword', []);

        return parent::getPassword();
    }

    /**
     * {@inheritDoc}
     */
    public function setConnection($connection)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setConnection', [$connection]);

        return parent::setConnection($connection);
    }

    /**
     * {@inheritDoc}
     */
    public function getConnection()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getConnection', []);

        return parent::getConnection();
    }

    /**
     * {@inheritDoc}
     */
    public function setBiography($biography)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBiography', [$biography]);

        return parent::setBiography($biography);
    }

    /**
     * {@inheritDoc}
     */
    public function getBiography()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBiography', []);

        return parent::getBiography();
    }

    /**
     * {@inheritDoc}
     */
    public function setImage($image)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setImage', [$image]);

        return parent::setImage($image);
    }

    /**
     * {@inheritDoc}
     */
    public function getImage()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getImage', []);

        return parent::getImage();
    }

    /**
     * {@inheritDoc}
     */
    public function setTermscondition($termscondition)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTermscondition', [$termscondition]);

        return parent::setTermscondition($termscondition);
    }

    /**
     * {@inheritDoc}
     */
    public function getTermscondition()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTermscondition', []);

        return parent::getTermscondition();
    }

    /**
     * {@inheritDoc}
     */
    public function setDatejob($datejob)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDatejob', [$datejob]);

        return parent::setDatejob($datejob);
    }

    /**
     * {@inheritDoc}
     */
    public function getDatejob()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDatejob', []);

        return parent::getDatejob();
    }

    /**
     * {@inheritDoc}
     */
    public function setPrivacy($privacy)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPrivacy', [$privacy]);

        return parent::setPrivacy($privacy);
    }

    /**
     * {@inheritDoc}
     */
    public function getPrivacy()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPrivacy', []);

        return parent::getPrivacy();
    }

    /**
     * {@inheritDoc}
     */
    public function setRole($role)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRole', [$role]);

        return parent::setRole($role);
    }

    /**
     * {@inheritDoc}
     */
    public function getRole()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRole', []);

        return parent::getRole();
    }

    /**
     * {@inheritDoc}
     */
    public function setActive($active)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setActive', [$active]);

        return parent::setActive($active);
    }

    /**
     * {@inheritDoc}
     */
    public function getActive()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getActive', []);

        return parent::getActive();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreatedAt($createdAt)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreatedAt', [$createdAt]);

        return parent::setCreatedAt($createdAt);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreatedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedAt', []);

        return parent::getCreatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setUpdatedAt($updatedAt)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUpdatedAt', [$updatedAt]);

        return parent::setUpdatedAt($updatedAt);
    }

    /**
     * {@inheritDoc}
     */
    public function getUpdatedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUpdatedAt', []);

        return parent::getUpdatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setAnonimo($anonimo)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAnonimo', [$anonimo]);

        return parent::setAnonimo($anonimo);
    }

    /**
     * {@inheritDoc}
     */
    public function getAnonimo()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAnonimo', []);

        return parent::getAnonimo();
    }

    /**
     * {@inheritDoc}
     */
    public function setFacebookId($facebookId)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFacebookId', [$facebookId]);

        return parent::setFacebookId($facebookId);
    }

    /**
     * {@inheritDoc}
     */
    public function getFacebookId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFacebookId', []);

        return parent::getFacebookId();
    }

    /**
     * {@inheritDoc}
     */
    public function setGoogleId($googleId)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setGoogleId', [$googleId]);

        return parent::setGoogleId($googleId);
    }

    /**
     * {@inheritDoc}
     */
    public function getGoogleId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getGoogleId', []);

        return parent::getGoogleId();
    }

    /**
     * {@inheritDoc}
     */
    public function setGender($gender)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setGender', [$gender]);

        return parent::setGender($gender);
    }

    /**
     * {@inheritDoc}
     */
    public function getGender()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getGender', []);

        return parent::getGender();
    }

}
