<?php

namespace Proxies\__CG__\BackendBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Opinion extends \BackendBundle\Entity\Opinion implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'BackendBundle\\Entity\\Opinion' . "\0" . 'id', '' . "\0" . 'BackendBundle\\Entity\\Opinion' . "\0" . 'generalcomment', '' . "\0" . 'BackendBundle\\Entity\\Opinion' . "\0" . 'point1', '' . "\0" . 'BackendBundle\\Entity\\Opinion' . "\0" . 'point2', '' . "\0" . 'BackendBundle\\Entity\\Opinion' . "\0" . 'point3', '' . "\0" . 'BackendBundle\\Entity\\Opinion' . "\0" . 'point4', '' . "\0" . 'BackendBundle\\Entity\\Opinion' . "\0" . 'point5', '' . "\0" . 'BackendBundle\\Entity\\Opinion' . "\0" . 'point6', '' . "\0" . 'BackendBundle\\Entity\\Opinion' . "\0" . 'point7', '' . "\0" . 'BackendBundle\\Entity\\Opinion' . "\0" . 'point8', '' . "\0" . 'BackendBundle\\Entity\\Opinion' . "\0" . 'point9', '' . "\0" . 'BackendBundle\\Entity\\Opinion' . "\0" . 'point10', '' . "\0" . 'BackendBundle\\Entity\\Opinion' . "\0" . 'createdAt', '' . "\0" . 'BackendBundle\\Entity\\Opinion' . "\0" . 'updatedAt', '' . "\0" . 'BackendBundle\\Entity\\Opinion' . "\0" . 'company', '' . "\0" . 'BackendBundle\\Entity\\Opinion' . "\0" . 'user', '' . "\0" . 'BackendBundle\\Entity\\Opinion' . "\0" . 'yesno'];
        }

        return ['__isInitialized__', '' . "\0" . 'BackendBundle\\Entity\\Opinion' . "\0" . 'id', '' . "\0" . 'BackendBundle\\Entity\\Opinion' . "\0" . 'generalcomment', '' . "\0" . 'BackendBundle\\Entity\\Opinion' . "\0" . 'point1', '' . "\0" . 'BackendBundle\\Entity\\Opinion' . "\0" . 'point2', '' . "\0" . 'BackendBundle\\Entity\\Opinion' . "\0" . 'point3', '' . "\0" . 'BackendBundle\\Entity\\Opinion' . "\0" . 'point4', '' . "\0" . 'BackendBundle\\Entity\\Opinion' . "\0" . 'point5', '' . "\0" . 'BackendBundle\\Entity\\Opinion' . "\0" . 'point6', '' . "\0" . 'BackendBundle\\Entity\\Opinion' . "\0" . 'point7', '' . "\0" . 'BackendBundle\\Entity\\Opinion' . "\0" . 'point8', '' . "\0" . 'BackendBundle\\Entity\\Opinion' . "\0" . 'point9', '' . "\0" . 'BackendBundle\\Entity\\Opinion' . "\0" . 'point10', '' . "\0" . 'BackendBundle\\Entity\\Opinion' . "\0" . 'createdAt', '' . "\0" . 'BackendBundle\\Entity\\Opinion' . "\0" . 'updatedAt', '' . "\0" . 'BackendBundle\\Entity\\Opinion' . "\0" . 'company', '' . "\0" . 'BackendBundle\\Entity\\Opinion' . "\0" . 'user', '' . "\0" . 'BackendBundle\\Entity\\Opinion' . "\0" . 'yesno'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Opinion $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setGeneralcomment($generalcomment)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setGeneralcomment', [$generalcomment]);

        return parent::setGeneralcomment($generalcomment);
    }

    /**
     * {@inheritDoc}
     */
    public function getGeneralcomment()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getGeneralcomment', []);

        return parent::getGeneralcomment();
    }

    /**
     * {@inheritDoc}
     */
    public function setPoint1($point1)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPoint1', [$point1]);

        return parent::setPoint1($point1);
    }

    /**
     * {@inheritDoc}
     */
    public function getPoint1()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPoint1', []);

        return parent::getPoint1();
    }

    /**
     * {@inheritDoc}
     */
    public function setPoint2($point2)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPoint2', [$point2]);

        return parent::setPoint2($point2);
    }

    /**
     * {@inheritDoc}
     */
    public function getPoint2()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPoint2', []);

        return parent::getPoint2();
    }

    /**
     * {@inheritDoc}
     */
    public function setPoint3($point3)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPoint3', [$point3]);

        return parent::setPoint3($point3);
    }

    /**
     * {@inheritDoc}
     */
    public function getPoint3()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPoint3', []);

        return parent::getPoint3();
    }

    /**
     * {@inheritDoc}
     */
    public function setPoint4($point4)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPoint4', [$point4]);

        return parent::setPoint4($point4);
    }

    /**
     * {@inheritDoc}
     */
    public function getPoint4()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPoint4', []);

        return parent::getPoint4();
    }

    /**
     * {@inheritDoc}
     */
    public function setPoint5($point5)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPoint5', [$point5]);

        return parent::setPoint5($point5);
    }

    /**
     * {@inheritDoc}
     */
    public function getPoint5()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPoint5', []);

        return parent::getPoint5();
    }

    /**
     * {@inheritDoc}
     */
    public function setPoint6($point6)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPoint6', [$point6]);

        return parent::setPoint6($point6);
    }

    /**
     * {@inheritDoc}
     */
    public function getPoint6()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPoint6', []);

        return parent::getPoint6();
    }

    /**
     * {@inheritDoc}
     */
    public function setPoint7($point7)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPoint7', [$point7]);

        return parent::setPoint7($point7);
    }

    /**
     * {@inheritDoc}
     */
    public function getPoint7()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPoint7', []);

        return parent::getPoint7();
    }

    /**
     * {@inheritDoc}
     */
    public function setPoint8($point8)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPoint8', [$point8]);

        return parent::setPoint8($point8);
    }

    /**
     * {@inheritDoc}
     */
    public function getPoint8()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPoint8', []);

        return parent::getPoint8();
    }

    /**
     * {@inheritDoc}
     */
    public function setPoint9($point9)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPoint9', [$point9]);

        return parent::setPoint9($point9);
    }

    /**
     * {@inheritDoc}
     */
    public function getPoint9()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPoint9', []);

        return parent::getPoint9();
    }

    /**
     * {@inheritDoc}
     */
    public function setPoint10($point10)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPoint10', [$point10]);

        return parent::setPoint10($point10);
    }

    /**
     * {@inheritDoc}
     */
    public function getPoint10()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPoint10', []);

        return parent::getPoint10();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreatedAt($createdAt)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreatedAt', [$createdAt]);

        return parent::setCreatedAt($createdAt);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreatedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedAt', []);

        return parent::getCreatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setUpdatedAt($updatedAt)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUpdatedAt', [$updatedAt]);

        return parent::setUpdatedAt($updatedAt);
    }

    /**
     * {@inheritDoc}
     */
    public function getUpdatedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUpdatedAt', []);

        return parent::getUpdatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setCompany(\BackendBundle\Entity\Company $company = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCompany', [$company]);

        return parent::setCompany($company);
    }

    /**
     * {@inheritDoc}
     */
    public function getCompany()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCompany', []);

        return parent::getCompany();
    }

    /**
     * {@inheritDoc}
     */
    public function setUser(\BackendBundle\Entity\User $user = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUser', [$user]);

        return parent::setUser($user);
    }

    /**
     * {@inheritDoc}
     */
    public function getUser()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUser', []);

        return parent::getUser();
    }

    /**
     * {@inheritDoc}
     */
    public function setYesno($yesno)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setYesno', [$yesno]);

        return parent::setYesno($yesno);
    }

    /**
     * {@inheritDoc}
     */
    public function getYesno()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getYesno', []);

        return parent::getYesno();
    }

}
